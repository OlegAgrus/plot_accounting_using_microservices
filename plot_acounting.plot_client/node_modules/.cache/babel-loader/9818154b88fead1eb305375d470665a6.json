{"ast":null,"code":"var _jsxFileName = \"C:\\\\My\\\\Work\\\\projects\\\\conference_manager_client\\\\src\\\\component\\\\base\\\\conferenceDetails\\\\ConferenceDetails.js\";\nimport React from 'react';\nimport './ConferenceDeatils.css';\nimport axios from \"axios\";\nimport { ParticipantList } from \"./participantList/ParticipantList\";\nexport class ConferenceDetails extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.tempLogin = () => {\n      let loginUrl = `${this.urlBase}:${this.port}/login`;\n      let loginData = {\n        username: 'user1@gmail.com',\n        password: 'user1'\n      };\n      return axios.post(loginUrl, loginData, {\n        withCredentials: true,\n        auth: loginData\n      }).then(response => console.log(response));\n    };\n\n    this.initUser = () => {\n      console.log(\"in init user\");\n      let getUserUrl = `${this.urlBase}:${this.port}/api/v1/participant`;\n      return axios.get(getUserUrl, {\n        withCredentials: true\n      }).then(response => this.setState({\n        user: response.data\n      }));\n    };\n\n    this.initParams = () => {\n      console.log(\"in init params\");\n      return this.loadConference().then(response => this.setState({\n        conference: response.data,\n        conferenceRoom: response.data.conferenceRoom\n      }));\n    };\n\n    this.loadConference = () => {\n      let loadUrl = `${this.urlBase}:${this.port}/api/v1/conference/${this.state.conferenceId}`;\n      return axios.get(loadUrl, {\n        withCredentials: true\n      });\n    };\n\n    this.onLeaveClick = () => {};\n\n    this.onJoinClick = () => {\n      let joinUrl = `${this.urlBase}:${this.port}/api/v1/conference/${this.state.conferenceId}`;\n      axios.put(joinUrl, {}, {\n        withCredentials: true\n      }).then(response => {});\n    };\n\n    this.renderBasicEntranceButtons = () => {\n      let isEntered = false;\n      this.state.conference.participants.forEach(item => {\n        if (item.id === this.state.user.id) {\n          isEntered = true;\n        }\n      });\n      if (isEntered) return React.createElement(\"div\", {\n        className: \"conference-entrance-button-set\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.onLeaveClick,\n        type: \"button\",\n        className: \"btn btn-outline-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Leave\"));\n      return React.createElement(\"div\", {\n        className: \"conference-entrance-button-set\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: this.onJoinClick,\n        className: \"btn btn-outline-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Join\"));\n    };\n\n    this.urlBase = 'http://localhost';\n    this.port = '8080';\n    this.state = {\n      conferenceId: props.match.params.conferenceId,\n      conference: {\n        participants: []\n      },\n      conferenceRoom: {},\n      user: {}\n    };\n  }\n\n  componentDidMount() {\n    this.tempLogin().catch(() => {\n      this.initUser().then(() => {\n        this.initParams();\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"conference-details-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Conference '\", this.state.conference.name, \"' Details\"), React.createElement(\"h3\", {\n      className: \"conference-details-room-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Conference Room\"), React.createElement(\"ul\", {\n      className: \"conference-details-room-data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Room name: \", this.state.conferenceRoom.roomName), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Location: \", this.state.conferenceRoom.location)), React.createElement(\"h3\", {\n      className: \"conference-details-participants-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Participants \", this.state.conference.participants.length, \"/\", this.state.conferenceRoom.maxSeats), this.renderBasicEntranceButtons(), React.createElement(\"div\", {\n      className: \"conference-participants-list-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(ParticipantList, {\n      participants: this.state.conference.participants,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["C:/My/Work/projects/conference_manager_client/src/component/base/conferenceDetails/ConferenceDetails.js"],"names":["React","axios","ParticipantList","ConferenceDetails","Component","constructor","props","tempLogin","loginUrl","urlBase","port","loginData","username","password","post","withCredentials","auth","then","response","console","log","initUser","getUserUrl","get","setState","user","data","initParams","loadConference","conference","conferenceRoom","loadUrl","state","conferenceId","onLeaveClick","onJoinClick","joinUrl","put","renderBasicEntranceButtons","isEntered","participants","forEach","item","id","match","params","componentDidMount","catch","render","name","roomName","location","length","maxSeats"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './ConferenceDeatils.css';\r\nimport axios from \"axios\";\r\nimport {ParticipantList} from \"./participantList/ParticipantList\";\r\n\r\nexport class ConferenceDetails extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.urlBase = 'http://localhost';\r\n        this.port = '8080';\r\n\r\n        this.state = {\r\n            conferenceId: props.match.params.conferenceId,\r\n            conference: {\r\n                participants: [],\r\n            },\r\n            conferenceRoom: {},\r\n            user: {},\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.tempLogin()\r\n            .catch(() => {\r\n                this.initUser().then(() => {\r\n                    this.initParams();\r\n                });\r\n            });\r\n    }\r\n\r\n    tempLogin = () => {\r\n        let loginUrl = `${this.urlBase}:${this.port}/login`;\r\n        let loginData = {\r\n            username: 'user1@gmail.com',\r\n            password: 'user1',\r\n        };\r\n        return axios.post(loginUrl, loginData, {withCredentials: true, auth: loginData})\r\n            .then((response) => console.log(response));\r\n    };\r\n\r\n    initUser = () => {\r\n        console.log(\"in init user\");\r\n        let getUserUrl = `${this.urlBase}:${this.port}/api/v1/participant`;\r\n        return axios.get(getUserUrl, {withCredentials: true})\r\n            .then((response) => this.setState({\r\n                user: response.data,\r\n            }));\r\n    };\r\n\r\n    initParams = () => {\r\n        console.log(\"in init params\");\r\n        return this.loadConference()\r\n            .then((response) => this.setState({\r\n                conference: response.data,\r\n                conferenceRoom: response.data.conferenceRoom,\r\n            }));\r\n    };\r\n\r\n    loadConference = () => {\r\n        let loadUrl = `${this.urlBase}:${this.port}/api/v1/conference/${this.state.conferenceId}`;\r\n        return axios.get(loadUrl, {withCredentials: true});\r\n    };\r\n\r\n    onLeaveClick = () => {\r\n\r\n    };\r\n\r\n    onJoinClick = () => {\r\n        let joinUrl = `${this.urlBase}:${this.port}/api/v1/conference/${this.state.conferenceId}`;\r\n        axios.put(joinUrl,{},{withCredentials: true}).then((response) => {\r\n\r\n        })\r\n    };\r\n\r\n    renderBasicEntranceButtons = () => {\r\n        let isEntered = false;\r\n        this.state.conference.participants.forEach((item) => {\r\n            if (item.id === this.state.user.id) {\r\n                isEntered = true;\r\n            }\r\n        });\r\n        if (isEntered) return(\r\n            <div className=\"conference-entrance-button-set\">\r\n                <button onClick={this.onLeaveClick} type=\"button\" className=\"btn btn-outline-primary\">Leave</button>\r\n            </div>\r\n        );\r\n        return(\r\n            <div className=\"conference-entrance-button-set\">\r\n                <button type={this.onJoinClick} className=\"btn btn-outline-primary\">Join</button>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <h2 className=\"conference-details-header\">Conference '{this.state.conference.name}' Details</h2>\r\n                <h3 className=\"conference-details-room-header\">Conference Room</h3>\r\n                <ul className=\"conference-details-room-data\">\r\n                    <li>Room name: {this.state.conferenceRoom.roomName}</li>\r\n                    <li>Location: {this.state.conferenceRoom.location}</li>\r\n                </ul>\r\n                <h3 className=\"conference-details-participants-header\">\r\n                    Participants {this.state.conference.participants.length}/{this.state.conferenceRoom.maxSeats}\r\n                </h3>\r\n                {this.renderBasicEntranceButtons()}\r\n                <div className=\"conference-participants-list-container\">\r\n                    <ParticipantList participants={this.state.conference.participants}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}