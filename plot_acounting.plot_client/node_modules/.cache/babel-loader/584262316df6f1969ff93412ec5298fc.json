{"ast":null,"code":"var _jsxFileName = \"C:\\\\My\\\\Work\\\\projects\\\\conference_manager_client\\\\src\\\\component\\\\base\\\\base.js\";\nimport React from 'react';\nimport axios from 'axios';\nexport class Base extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.tempLogin = () => {\n      let loginUrl = `${this.urlBase}:${this.port}/login`;\n      let loginData = {\n        username: 'user1@gmail.com',\n        password: 'user1'\n      };\n      return axios.post(loginUrl, loginData, {\n        withCredentials: true,\n        auth: loginData\n      }).then(response => console.log(response));\n    };\n\n    this.initConferenceList = () => {\n      this.loadConferenceList().then(response => this.setState({\n        conferenceList: response.data\n      }));\n    };\n\n    this.loadConferenceList = () => {\n      let loadUrl = `${this.urlBase}:${this.port}/api/v1/conference`;\n      return axios.get(loadUrl, {\n        withCredentials: true\n      });\n    };\n\n    this.urlBase = 'http://localhost';\n    this.port = '8080';\n    this.state = {\n      conferenceList: []\n    };\n  }\n\n  componentDidMount() {\n    this.tempLogin().catch(() => this.initConferenceList());\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, this.state.conferenceList.map(item => {\n      return;\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/My/Work/projects/conference_manager_client/src/component/base/base.js"],"names":["React","axios","Base","Component","constructor","props","tempLogin","loginUrl","urlBase","port","loginData","username","password","post","withCredentials","auth","then","response","console","log","initConferenceList","loadConferenceList","setState","conferenceList","data","loadUrl","get","state","componentDidMount","catch","render","map","item"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,OAAO,MAAMC,IAAN,SAAmBF,KAAK,CAACG,SAAzB,CAAkC;AAErCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAgBnBC,SAhBmB,GAgBP,MAAM;AACd,UAAIC,QAAQ,GAAI,GAAE,KAAKC,OAAQ,IAAG,KAAKC,IAAK,QAA5C;AACA,UAAIC,SAAS,GAAG;AACZC,QAAAA,QAAQ,EAAE,iBADE;AAEZC,QAAAA,QAAQ,EAAE;AAFE,OAAhB;AAIA,aAAOX,KAAK,CAACY,IAAN,CAAWN,QAAX,EAAqBG,SAArB,EAAgC;AAACI,QAAAA,eAAe,EAAE,IAAlB;AAAwBC,QAAAA,IAAI,EAAEL;AAA9B,OAAhC,EACFM,IADE,CACIC,QAAD,IAAcC,OAAO,CAACC,GAAR,CAAYF,QAAZ,CADjB,CAAP;AAEH,KAxBkB;;AAAA,SA0BnBG,kBA1BmB,GA0BE,MAAM;AACvB,WAAKC,kBAAL,GACKL,IADL,CACWC,QAAD,IAAc,KAAKK,QAAL,CAAc;AAACC,QAAAA,cAAc,EAAEN,QAAQ,CAACO;AAA1B,OAAd,CADxB;AAEH,KA7BkB;;AAAA,SA+BnBH,kBA/BmB,GA+BE,MAAM;AACvB,UAAII,OAAO,GAAI,GAAE,KAAKjB,OAAQ,IAAG,KAAKC,IAAK,oBAA3C;AACA,aAAOR,KAAK,CAACyB,GAAN,CAAUD,OAAV,EAAmB;AAACX,QAAAA,eAAe,EAAE;AAAlB,OAAnB,CAAP;AACH,KAlCkB;;AAGf,SAAKN,OAAL,GAAe,kBAAf;AACA,SAAKC,IAAL,GAAY,MAAZ;AAEA,SAAKkB,KAAL,GAAa;AACTJ,MAAAA,cAAc,EAAE;AADP,KAAb;AAIH;;AAEDK,EAAAA,iBAAiB,GAAG;AAChB,SAAKtB,SAAL,GAAiBuB,KAAjB,CAAuB,MAAM,KAAKT,kBAAL,EAA7B;AACH;;AAwBDU,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKH,KAAL,CAAWJ,cAAX,CAA0BQ,GAA1B,CAA+BC,IAAD,IAAU;AACrC;AACH,KAFA,CADL,CADJ;AAOH;;AAhDoC","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nexport class Base extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.urlBase = 'http://localhost';\r\n        this.port = '8080';\r\n\r\n        this.state = {\r\n            conferenceList: [],\r\n        };\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.tempLogin().catch(() => this.initConferenceList());\r\n    }\r\n\r\n    tempLogin = () => {\r\n        let loginUrl = `${this.urlBase}:${this.port}/login`;\r\n        let loginData = {\r\n            username: 'user1@gmail.com',\r\n            password: 'user1',\r\n        };\r\n        return axios.post(loginUrl, loginData, {withCredentials: true, auth: loginData})\r\n            .then((response) => console.log(response));\r\n    };\r\n\r\n    initConferenceList = () => {\r\n        this.loadConferenceList()\r\n            .then((response) => this.setState({conferenceList: response.data}));\r\n    };\r\n\r\n    loadConferenceList = () => {\r\n        let loadUrl = `${this.urlBase}:${this.port}/api/v1/conference`;\r\n        return axios.get(loadUrl, {withCredentials: true});\r\n    };\r\n\r\n\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                {this.state.conferenceList.map((item) => {\r\n                    return\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}