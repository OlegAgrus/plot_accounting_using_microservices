{"ast":null,"code":"var _jsxFileName = \"C:\\\\My\\\\Work\\\\projects\\\\conference_manager_client\\\\src\\\\component\\\\base\\\\conferenceDetails\\\\ConferenceDetails.js\";\nimport React from 'react';\nimport './ConferenceDeatils.css';\nimport axios from \"axios\";\nimport { ParticipantList } from \"./participantList/ParticipantList\";\nexport class ConferenceDetails extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.tempLogin = () => {\n      let loginUrl = `${this.urlBase}:${this.port}/login`;\n      let loginData = {\n        username: 'user1@gmail.com',\n        password: 'user1'\n      };\n      return axios.post(loginUrl, loginData, {\n        withCredentials: true,\n        auth: loginData\n      }).then(response => console.log(response));\n    };\n\n    this.initUser = () => {\n      console.log(\"in init user\");\n      let getUserUrl = `${this.urlBase}:${this.port}/api/v1/participant`;\n      return axios.get(getUserUrl, {\n        withCredentials: true\n      }).then(response => this.setState({\n        user: response.data\n      }));\n    };\n\n    this.initParams = () => {\n      console.log(\"in init params\");\n      return this.loadConference().then(response => this.setState({\n        isOwner: response.data.owner.id === this.state.user.id,\n        conference: response.data,\n        conferenceRoom: response.data.conferenceRoom\n      }));\n    };\n\n    this.loadConference = () => {\n      let loadUrl = `${this.urlBase}:${this.port}/api/v1/conference/${this.state.conferenceId}`;\n      return axios.get(loadUrl, {\n        withCredentials: true\n      });\n    };\n\n    this.onLeaveClick = () => {\n      let leaveUrl = `${this.urlBase}:${this.port}/api/v1/conference/delete/${this.state.conferenceId}`;\n      axios.put(leaveUrl, {}, {\n        withCredentials: true\n      }).then(() => {\n        this.initParams();\n      });\n    };\n\n    this.onJoinClick = () => {\n      let joinUrl = `${this.urlBase}:${this.port}/api/v1/conference/add/${this.state.conferenceId}`;\n      axios.put(joinUrl, {}, {\n        withCredentials: true\n      }).then(() => {\n        this.initParams();\n      });\n    };\n\n    this.onDeleteConferenceClick = () => {};\n\n    this.renderBasicEntranceButtons = () => {\n      let isEntered = false;\n      this.state.conference.participants.forEach(item => {\n        if (item.id === this.state.user.id) {\n          isEntered = true;\n        }\n      });\n      let deleteConferenceButton = '';\n\n      if (this.state.isOwner) {\n        deleteConferenceButton = React.createElement(\"button\", {\n          onClick: this.onDeleteConferenceClick,\n          type: \"button\",\n          className: \"btn btn-outline-primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, \"Cancel conference\");\n      }\n\n      if (isEntered) return React.createElement(\"div\", {\n        className: \"conference-entrance-button-set\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.onLeaveClick,\n        type: \"button\",\n        className: \"btn btn-outline-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Leave\"), deleteConferenceButton);\n      return React.createElement(\"div\", {\n        className: \"conference-entrance-button-set\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.onJoinClick,\n        type: \"button\",\n        className: \"btn btn-outline-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Join\"), deleteConferenceButton);\n    };\n\n    this.urlBase = 'http://localhost';\n    this.port = '8080';\n    this.state = {\n      isOwner: false,\n      conferenceId: props.match.params.conferenceId,\n      conference: {\n        participants: [],\n        owner: {}\n      },\n      conferenceRoom: {},\n      user: {}\n    };\n  }\n\n  componentDidMount() {\n    this.tempLogin().catch(() => {\n      this.initUser().then(() => {\n        this.initParams();\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"conference-details-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Conference '\", this.state.conference.name, \"' Details\"), React.createElement(\"h3\", {\n      className: \"conference-details-room-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Conference Room\"), React.createElement(\"ul\", {\n      className: \"conference-details-room-data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Room name: \", this.state.conferenceRoom.roomName), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Location: \", this.state.conferenceRoom.location)), React.createElement(\"h3\", {\n      className: \"conference-details-participants-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Participants \", this.state.conference.participants.length, \"/\", this.state.conferenceRoom.maxSeats), this.renderBasicEntranceButtons(), React.createElement(\"div\", {\n      className: \"conference-participants-list-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(ParticipantList, {\n      participants: this.state.conference.participants,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["C:/My/Work/projects/conference_manager_client/src/component/base/conferenceDetails/ConferenceDetails.js"],"names":["React","axios","ParticipantList","ConferenceDetails","Component","constructor","props","tempLogin","loginUrl","urlBase","port","loginData","username","password","post","withCredentials","auth","then","response","console","log","initUser","getUserUrl","get","setState","user","data","initParams","loadConference","isOwner","owner","id","state","conference","conferenceRoom","loadUrl","conferenceId","onLeaveClick","leaveUrl","put","onJoinClick","joinUrl","onDeleteConferenceClick","renderBasicEntranceButtons","isEntered","participants","forEach","item","deleteConferenceButton","match","params","componentDidMount","catch","render","name","roomName","location","length","maxSeats"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './ConferenceDeatils.css';\r\nimport axios from \"axios\";\r\nimport {ParticipantList} from \"./participantList/ParticipantList\";\r\n\r\nexport class ConferenceDetails extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.urlBase = 'http://localhost';\r\n        this.port = '8080';\r\n\r\n        this.state = {\r\n            isOwner: false,\r\n            conferenceId: props.match.params.conferenceId,\r\n            conference: {\r\n                participants: [],\r\n                owner: {},\r\n            },\r\n            conferenceRoom: {},\r\n            user: {},\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.tempLogin()\r\n            .catch(() => {\r\n                this.initUser().then(() => {\r\n                    this.initParams();\r\n                });\r\n            });\r\n    }\r\n\r\n    tempLogin = () => {\r\n        let loginUrl = `${this.urlBase}:${this.port}/login`;\r\n        let loginData = {\r\n            username: 'user1@gmail.com',\r\n            password: 'user1',\r\n        };\r\n        return axios.post(loginUrl, loginData, {withCredentials: true, auth: loginData})\r\n            .then((response) => console.log(response));\r\n    };\r\n\r\n    initUser = () => {\r\n        console.log(\"in init user\");\r\n        let getUserUrl = `${this.urlBase}:${this.port}/api/v1/participant`;\r\n        return axios.get(getUserUrl, {withCredentials: true})\r\n            .then((response) => this.setState({\r\n                user: response.data,\r\n            }));\r\n    };\r\n\r\n    initParams = () => {\r\n        console.log(\"in init params\");\r\n        return this.loadConference()\r\n            .then((response) => this.setState({\r\n                isOwner: response.data.owner.id === this.state.user.id,\r\n                conference: response.data,\r\n                conferenceRoom: response.data.conferenceRoom,\r\n            }));\r\n    };\r\n\r\n    loadConference = () => {\r\n        let loadUrl = `${this.urlBase}:${this.port}/api/v1/conference/${this.state.conferenceId}`;\r\n        return axios.get(loadUrl, {withCredentials: true});\r\n    };\r\n\r\n    onLeaveClick = () => {\r\n        let leaveUrl = `${this.urlBase}:${this.port}/api/v1/conference/delete/${this.state.conferenceId}`;\r\n        axios.put(leaveUrl,{},{withCredentials: true}).then(() => {\r\n            this.initParams();\r\n        })\r\n    };\r\n\r\n    onJoinClick = () => {\r\n        let joinUrl = `${this.urlBase}:${this.port}/api/v1/conference/add/${this.state.conferenceId}`;\r\n        axios.put(joinUrl,{},{withCredentials: true}).then(() => {\r\n            this.initParams();\r\n        })\r\n    };\r\n\r\n    onDeleteConferenceClick = () => {\r\n\r\n    };\r\n\r\n    renderBasicEntranceButtons = () => {\r\n        let isEntered = false;\r\n        this.state.conference.participants.forEach((item) => {\r\n            if (item.id === this.state.user.id) {\r\n                isEntered = true;\r\n            }\r\n        });\r\n        let deleteConferenceButton = '';\r\n        if (this.state.isOwner) {\r\n            deleteConferenceButton = <button\r\n                onClick={this.onDeleteConferenceClick}\r\n                type=\"button\"\r\n                className=\"btn btn-outline-primary\">\r\n                Cancel conference\r\n            </button>;\r\n        }\r\n        if (isEntered) return(\r\n            <div className=\"conference-entrance-button-set\">\r\n                <button onClick={this.onLeaveClick} type=\"button\" className=\"btn btn-outline-primary\">Leave</button>\r\n                {deleteConferenceButton}\r\n            </div>\r\n        );\r\n        return(\r\n            <div className=\"conference-entrance-button-set\">\r\n                <button onClick={this.onJoinClick} type=\"button\" className=\"btn btn-outline-primary\">Join</button>\r\n                {deleteConferenceButton}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <h2 className=\"conference-details-header\">Conference '{this.state.conference.name}' Details</h2>\r\n                <h3 className=\"conference-details-room-header\">Conference Room</h3>\r\n                <ul className=\"conference-details-room-data\">\r\n                    <li>Room name: {this.state.conferenceRoom.roomName}</li>\r\n                    <li>Location: {this.state.conferenceRoom.location}</li>\r\n                </ul>\r\n                <h3 className=\"conference-details-participants-header\">\r\n                    Participants {this.state.conference.participants.length}/{this.state.conferenceRoom.maxSeats}\r\n                </h3>\r\n                {this.renderBasicEntranceButtons()}\r\n                <div className=\"conference-participants-list-container\">\r\n                    <ParticipantList participants={this.state.conference.participants}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}