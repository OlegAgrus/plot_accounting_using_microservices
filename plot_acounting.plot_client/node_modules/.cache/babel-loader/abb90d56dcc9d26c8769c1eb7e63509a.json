{"ast":null,"code":"var _jsxFileName = \"C:\\\\My\\\\Work\\\\projects\\\\plot-accounter\\\\plot_acounting.plot_client\\\\src\\\\component\\\\base\\\\conferenceDetails\\\\ConferenceDetails.js\";\nimport React from 'react';\nimport './ConferenceDeatils.css';\nimport axios from \"axios\";\nimport { ParticipantList } from \"./participantList/ParticipantList\";\nexport class ConferenceDetails extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.tempLogin = () => {\n      let loginUrl = `${this.urlBase}:${this.port}/login`;\n      let loginData = {\n        username: 'user1@gmail.com',\n        password: 'user1'\n      };\n      return axios.post(loginUrl, loginData, {\n        withCredentials: true,\n        auth: loginData\n      }).then(response => console.log(response));\n    };\n\n    this.initUser = () => {\n      console.log(\"in init user\");\n      let getUserUrl = `${this.urlBase}:${this.port}/api/v1/participant`;\n      return axios.get(getUserUrl, {\n        withCredentials: true\n      }).then(response => this.setState({\n        user: response.data\n      })).catch(() => {\n        this.props.history.push(\"/login\");\n      });\n    };\n\n    this.initParams = () => {\n      console.log(\"in init params\");\n      return this.loadConference().then(response => this.setState({\n        isOwner: response.data.owner.id === this.state.user.id,\n        conference: response.data,\n        conferenceRoom: response.data.conferenceRoom\n      }));\n    };\n\n    this.loadConference = () => {\n      let loadUrl = `${this.urlBase}:${this.port}/api/v1/conference/${this.state.conferenceId}`;\n      return axios.get(loadUrl, {\n        withCredentials: true\n      });\n    };\n\n    this.onLeaveClick = () => {\n      let leaveUrl = `${this.urlBase}:${this.port}/api/v1/conference/delete/${this.state.conferenceId}`;\n      axios.put(leaveUrl, {}, {\n        withCredentials: true\n      }).then(() => {\n        this.initParams();\n      });\n    };\n\n    this.onJoinClick = () => {\n      let joinUrl = `${this.urlBase}:${this.port}/api/v1/conference/add/${this.state.conferenceId}`;\n      axios.put(joinUrl, {}, {\n        withCredentials: true\n      }).then(() => {\n        this.initParams();\n      });\n    };\n\n    this.onDeleteConferenceClick = () => {\n      let deleteUrl = `${this.urlBase}:${this.port}/api/v1/conference/${this.state.conferenceId}`;\n      axios.delete(deleteUrl, {\n        withCredentials: true\n      }).then(() => {\n        this.props.history.push(\"/\");\n      });\n    };\n\n    this.onKickClick = (event, target) => {\n      let kickId = event.target.parentElement.getAttribute(\"data-participant-id\");\n      let kickUrl = `${this.urlBase}:${this.port}/api/v1/conference/delete/${this.state.conferenceId}/participant/${kickId}`;\n      axios.put(kickUrl, {}, {\n        withCredentials: true\n      }).then(() => {\n        this.initParams();\n      });\n    };\n\n    this.renderBasicEntranceButtons = () => {\n      let isEntered = false;\n      this.state.conference.participants.forEach(item => {\n        if (item.id === this.state.user.id) {\n          isEntered = true;\n        }\n      });\n      let deleteConferenceButton = '';\n\n      if (this.state.isOwner) {\n        deleteConferenceButton = React.createElement(\"button\", {\n          onClick: this.onDeleteConferenceClick,\n          type: \"button\",\n          className: \"btn btn-outline-primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, \"Cancel conference\");\n      }\n\n      if (isEntered) return React.createElement(\"div\", {\n        className: \"conference-entrance-button-set\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.onLeaveClick,\n        type: \"button\",\n        className: \"btn btn-outline-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Leave\"), deleteConferenceButton);\n      return React.createElement(\"div\", {\n        className: \"conference-entrance-button-set\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.onJoinClick,\n        type: \"button\",\n        className: \"btn btn-outline-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Join\"), deleteConferenceButton);\n    };\n\n    this.urlBase = 'http://localhost';\n    this.port = '8080';\n    this.state = {\n      isOwner: false,\n      conferenceId: props.match.params.conferenceId,\n      conference: {\n        participants: [],\n        owner: {}\n      },\n      conferenceRoom: {},\n      user: {}\n    };\n  }\n\n  componentDidMount() {\n    this.initUser().then(() => {\n      this.initParams();\n    });\n  }\n\n  render() {\n    let date = new Date(this.state.conference.conferenceDate);\n    /*let formattedDate = [date.getMonth()+1,\r\n            date.getDate(),\r\n            date.getFullYear()].join('/')+' '+\r\n        [date.getHours(),\r\n            date.getMinutes()].join(':');*/\n\n    let formattedDate = date.toUTCString();\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"conference-details-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Conference '\", this.state.conference.name, \"' Start date: \", formattedDate), React.createElement(\"h3\", {\n      className: \"conference-details-room-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Conference Room\"), React.createElement(\"ul\", {\n      className: \"conference-details-room-data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Room name: \", this.state.conferenceRoom.roomName), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"Location: \", this.state.conferenceRoom.location)), React.createElement(\"h3\", {\n      className: \"conference-details-participants-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"Participants \", this.state.conference.participants.length, \"/\", this.state.conferenceRoom.maxSeats), this.renderBasicEntranceButtons(), React.createElement(\"div\", {\n      className: \"conference-participants-list-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(ParticipantList, {\n      onKickClick: this.onKickClick,\n      fromOwner: this.state.isOwner,\n      participants: this.state.conference.participants,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["C:/My/Work/projects/plot-accounter/plot_acounting.plot_client/src/component/base/conferenceDetails/ConferenceDetails.js"],"names":["React","axios","ParticipantList","ConferenceDetails","Component","constructor","props","tempLogin","loginUrl","urlBase","port","loginData","username","password","post","withCredentials","auth","then","response","console","log","initUser","getUserUrl","get","setState","user","data","catch","history","push","initParams","loadConference","isOwner","owner","id","state","conference","conferenceRoom","loadUrl","conferenceId","onLeaveClick","leaveUrl","put","onJoinClick","joinUrl","onDeleteConferenceClick","deleteUrl","delete","onKickClick","event","target","kickId","parentElement","getAttribute","kickUrl","renderBasicEntranceButtons","isEntered","participants","forEach","item","deleteConferenceButton","match","params","componentDidMount","render","date","Date","conferenceDate","formattedDate","toUTCString","name","roomName","location","length","maxSeats"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './ConferenceDeatils.css';\r\nimport axios from \"axios\";\r\nimport {ParticipantList} from \"./participantList/ParticipantList\";\r\n\r\nexport class ConferenceDetails extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.urlBase = 'http://localhost';\r\n        this.port = '8080';\r\n\r\n        this.state = {\r\n            isOwner: false,\r\n            conferenceId: props.match.params.conferenceId,\r\n            conference: {\r\n                participants: [],\r\n                owner: {},\r\n            },\r\n            conferenceRoom: {},\r\n            user: {},\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.initUser().then(() => {\r\n            this.initParams();\r\n        });\r\n    }\r\n\r\n    tempLogin = () => {\r\n        let loginUrl = `${this.urlBase}:${this.port}/login`;\r\n        let loginData = {\r\n            username: 'user1@gmail.com',\r\n            password: 'user1',\r\n        };\r\n        return axios.post(loginUrl, loginData, {withCredentials: true, auth: loginData})\r\n            .then((response) => console.log(response));\r\n    };\r\n\r\n    initUser = () => {\r\n        console.log(\"in init user\");\r\n        let getUserUrl = `${this.urlBase}:${this.port}/api/v1/participant`;\r\n        return axios.get(getUserUrl, {withCredentials: true})\r\n            .then((response) => this.setState({\r\n                user: response.data,\r\n            }))\r\n            .catch(() => {this.props.history.push(\"/login\")});\r\n    };\r\n\r\n    initParams = () => {\r\n        console.log(\"in init params\");\r\n        return this.loadConference()\r\n            .then((response) => this.setState({\r\n                isOwner: response.data.owner.id === this.state.user.id,\r\n                conference: response.data,\r\n                conferenceRoom: response.data.conferenceRoom,\r\n            }));\r\n    };\r\n\r\n    loadConference = () => {\r\n        let loadUrl = `${this.urlBase}:${this.port}/api/v1/conference/${this.state.conferenceId}`;\r\n        return axios.get(loadUrl, {withCredentials: true});\r\n    };\r\n\r\n    onLeaveClick = () => {\r\n        let leaveUrl = `${this.urlBase}:${this.port}/api/v1/conference/delete/${this.state.conferenceId}`;\r\n        axios.put(leaveUrl,{},{withCredentials: true}).then(() => {\r\n            this.initParams();\r\n        })\r\n    };\r\n\r\n    onJoinClick = () => {\r\n        let joinUrl = `${this.urlBase}:${this.port}/api/v1/conference/add/${this.state.conferenceId}`;\r\n        axios.put(joinUrl,{},{withCredentials: true}).then(() => {\r\n            this.initParams();\r\n        })\r\n    };\r\n\r\n    onDeleteConferenceClick = () => {\r\n        let deleteUrl = `${this.urlBase}:${this.port}/api/v1/conference/${this.state.conferenceId}`;\r\n        axios.delete(deleteUrl, {withCredentials: true}).then(() => {\r\n            this.props.history.push(\"/\");\r\n        });\r\n    };\r\n\r\n    onKickClick = (event, target) => {\r\n        let kickId = event.target.parentElement.getAttribute(\"data-participant-id\");\r\n        let kickUrl = `${this.urlBase}:${this.port}/api/v1/conference/delete/${this.state.conferenceId}/participant/${kickId}`;\r\n        axios.put(kickUrl,{},{withCredentials: true}).then(() => {\r\n            this.initParams();\r\n        })\r\n    };\r\n\r\n    renderBasicEntranceButtons = () => {\r\n        let isEntered = false;\r\n        this.state.conference.participants.forEach((item) => {\r\n            if (item.id === this.state.user.id) {\r\n                isEntered = true;\r\n            }\r\n        });\r\n        let deleteConferenceButton = '';\r\n        if (this.state.isOwner) {\r\n            deleteConferenceButton = <button\r\n                onClick={this.onDeleteConferenceClick}\r\n                type=\"button\"\r\n                className=\"btn btn-outline-primary\">\r\n                Cancel conference\r\n            </button>;\r\n        }\r\n        if (isEntered) return(\r\n            <div className=\"conference-entrance-button-set\">\r\n                <button onClick={this.onLeaveClick} type=\"button\" className=\"btn btn-outline-primary\">Leave</button>\r\n                {deleteConferenceButton}\r\n            </div>\r\n        );\r\n        return(\r\n            <div className=\"conference-entrance-button-set\">\r\n                <button onClick={this.onJoinClick} type=\"button\" className=\"btn btn-outline-primary\">Join</button>\r\n                {deleteConferenceButton}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        let date = new Date(this.state.conference.conferenceDate);\r\n        /*let formattedDate = [date.getMonth()+1,\r\n                date.getDate(),\r\n                date.getFullYear()].join('/')+' '+\r\n            [date.getHours(),\r\n                date.getMinutes()].join(':');*/\r\n        let formattedDate = date.toUTCString();\r\n\r\n        return(\r\n            <div>\r\n                <h2 className=\"conference-details-header\">Conference '{this.state.conference.name}' Start date: {formattedDate}</h2>\r\n                <h3 className=\"conference-details-room-header\">Conference Room</h3>\r\n                <ul className=\"conference-details-room-data\">\r\n                    <li>Room name: {this.state.conferenceRoom.roomName}</li>\r\n                    <li>Location: {this.state.conferenceRoom.location}</li>\r\n                </ul>\r\n                <h3 className=\"conference-details-participants-header\">\r\n                    Participants {this.state.conference.participants.length}/{this.state.conferenceRoom.maxSeats}\r\n                </h3>\r\n                {this.renderBasicEntranceButtons()}\r\n                <div className=\"conference-participants-list-container\">\r\n                    <ParticipantList\r\n                        onKickClick={this.onKickClick}\r\n                        fromOwner={this.state.isOwner}\r\n                        participants={this.state.conference.participants}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}