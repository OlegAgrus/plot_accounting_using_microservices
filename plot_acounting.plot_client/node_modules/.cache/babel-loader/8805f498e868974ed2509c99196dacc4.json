{"ast":null,"code":"var _jsxFileName = \"C:\\\\My\\\\Work\\\\projects\\\\conference_manager_client\\\\src\\\\component\\\\base\\\\conferenceCreator\\\\ConferenceCreator.js\";\nimport React from 'react';\nimport './ConferenceCreator.css';\nimport axios from \"axios\";\nexport class ConferenceCreator extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.tempLogin = () => {\n      let loginUrl = `${this.urlBase}:${this.port}/login`;\n      let loginData = {\n        username: 'user1@gmail.com',\n        password: 'user1'\n      };\n      return axios.post(loginUrl, loginData, {\n        withCredentials: true,\n        auth: loginData\n      }).then(response => console.log(response));\n    };\n\n    this.initUser = () => {\n      console.log(\"in init user\");\n      let getUserUrl = `${this.urlBase}:${this.port}/api/v1/participant`;\n      return axios.get(getUserUrl, {\n        withCredentials: true\n      }).then(response => this.setState({\n        user: response.data\n      }));\n    };\n\n    this.initRooms = () => {\n      this.loadRooms().then(response => this.setState({\n        rooms: response.data\n      }));\n    };\n\n    this.loadRooms = () => {\n      let getRoomsUrl = `${this.urlBase}:${this.port}/api/v1/conference_room`;\n      return axios.get(getRoomsUrl, {\n        withCredentials: true\n      });\n    };\n\n    this.onCreate = event => {\n      let creationForm = event.target.parentElement;\n      let createData = {\n        name: creationForm.name.value,\n        participants: [],\n        conferenceRoom: {\n          id: creationForm.conferenceRoom.value\n        },\n        conferenceDate: creationForm.date.value\n      };\n      console.log(createData);\n    };\n\n    this.urlBase = 'http://localhost';\n    this.port = '8080';\n    this.state = {\n      user: {},\n      rooms: []\n    };\n  }\n\n  componentDidMount() {\n    this.tempLogin().catch(() => {\n      this.initUser().then(() => {\n        this.initRooms();\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"conference-list-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"New Conference\"), React.createElement(\"div\", {\n      className: \"conference-creation-form-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"newConferenceName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Name:\"), React.createElement(\"input\", {\n      name: \"name\",\n      type: \"text\",\n      className: \"form-control\",\n      id: \"newConferenceName\",\n      placeholder: \"Conference No. 3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"newConferenceRoom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Conference room:\"), React.createElement(\"select\", {\n      name: \"conferenceRoom\",\n      className: \"form-control\",\n      id: \"newConferenceRoom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, this.state.rooms.map(item => React.createElement(\"option\", {\n      key: item.id,\n      value: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, item.roomName, \"/\", item.location)))), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"newConferenceDate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Start date:\"), React.createElement(\"input\", {\n      name: \"date\",\n      type: \"datetime-local\",\n      className: \"form-control\",\n      id: \"newConferenceDate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      onClick: this.onCreate,\n      type: \"button\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Create\"))));\n  }\n\n}","map":{"version":3,"sources":["C:/My/Work/projects/conference_manager_client/src/component/base/conferenceCreator/ConferenceCreator.js"],"names":["React","axios","ConferenceCreator","Component","constructor","props","tempLogin","loginUrl","urlBase","port","loginData","username","password","post","withCredentials","auth","then","response","console","log","initUser","getUserUrl","get","setState","user","data","initRooms","loadRooms","rooms","getRoomsUrl","onCreate","event","creationForm","target","parentElement","createData","name","value","participants","conferenceRoom","id","conferenceDate","date","state","componentDidMount","catch","render","map","item","roomName","location"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './ConferenceCreator.css';\r\nimport axios from \"axios\";\r\n\r\nexport class ConferenceCreator extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.urlBase = 'http://localhost';\r\n        this.port = '8080';\r\n\r\n        this.state = {\r\n            user: {},\r\n            rooms: [],\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.tempLogin()\r\n            .catch(() => {\r\n                this.initUser().then(() => {\r\n                    this.initRooms();\r\n                });\r\n            });\r\n    }\r\n\r\n    tempLogin = () => {\r\n        let loginUrl = `${this.urlBase}:${this.port}/login`;\r\n        let loginData = {\r\n            username: 'user1@gmail.com',\r\n            password: 'user1',\r\n        };\r\n        return axios.post(loginUrl, loginData, {withCredentials: true, auth: loginData})\r\n            .then((response) => console.log(response));\r\n    };\r\n\r\n    initUser = () => {\r\n        console.log(\"in init user\");\r\n        let getUserUrl = `${this.urlBase}:${this.port}/api/v1/participant`;\r\n        return axios.get(getUserUrl, {withCredentials: true})\r\n            .then((response) => this.setState({\r\n                user: response.data,\r\n            }));\r\n    };\r\n\r\n    initRooms = () => {\r\n        this.loadRooms().then((response) => this.setState({\r\n            rooms: response.data\r\n        }));\r\n    };\r\n\r\n    loadRooms = () => {\r\n        let getRoomsUrl = `${this.urlBase}:${this.port}/api/v1/conference_room`;\r\n        return axios.get(getRoomsUrl, {withCredentials: true});\r\n    };\r\n\r\n    onCreate = (event) => {\r\n        let creationForm = event.target.parentElement;\r\n        let createData = {\r\n            name: creationForm.name.value,\r\n            participants: [],\r\n            conferenceRoom: {\r\n                id: creationForm.conferenceRoom.value,\r\n            },\r\n            conferenceDate: creationForm.date.value,\r\n        };\r\n        console.log(createData);\r\n    };\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <h2 className=\"conference-list-header\">New Conference</h2>\r\n                <div className=\"conference-creation-form-container\">\r\n                    <form>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"newConferenceName\">Name:</label>\r\n                            <input name=\"name\" type=\"text\" className=\"form-control\" id=\"newConferenceName\"\r\n                                   placeholder=\"Conference No. 3\"/>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"newConferenceRoom\">Conference room:</label>\r\n                            <select name=\"conferenceRoom\" className=\"form-control\" id=\"newConferenceRoom\">\r\n                                {this.state.rooms\r\n                                    .map((item) => <option\r\n                                        key={item.id}\r\n                                        value={item.id}>{item.roomName}/{item.location}</option>)}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"newConferenceDate\">Start date:</label>\r\n                            <input name=\"date\" type=\"datetime-local\" className=\"form-control\" id=\"newConferenceDate\"/>\r\n                        </div>\r\n                        <button onClick={this.onCreate} type=\"button\" className=\"btn btn-primary\">Create</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}